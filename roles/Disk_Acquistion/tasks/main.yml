---
- name: Query a file on a datastore
  community.vmware.vsphere_file:
    host: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ vcenter_datacenter }}'
    datastore: '{{ item }}'
    path: "{{ compromised_VM_name }}/{{ compromised_VM_name }}.vmdk"
    state: file
    validate_certs: "{{ CERT_VALIDATION }}"
  delegate_to: localhost
  ignore_errors: yes
  register: file_path_result
  loop: '{{ vcenter_datastore }}'


- name: get file status and url
  debug:
    var: item
    verbosity: 3
  loop: "{{ file_path_result | json_query( url_status_query ) }}"
  vars:
    url_status_query: "results[*].{status: status, url: url}"
  register: status_url_result

- name: print the thinhg
  debug:
    var: status_url_result

# - name: get url only
#   debug:
#     var: item
#     verbosity: 3
#   loop: "{{ file_path_result | json_query( url_query ) }}"
#   vars:
#     url_query: "results[*].{status: status, url: url}"
#   register: url_result

- name: get url only2
  debug:
    var: item
    verbosity: 1
  loop: "{{ status_url_result | json_query( url_query ) }}"
  vars:
    url_query: "results[?item.status == `200`]"
  register: url_result

- name: print the url_result0
  debug:
    var: url_result.results[0].item.item.url


- name: Fetch a file from datastore
  get_url:
    url: "{{ url_result.results[0].item.item.url }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ CERT_VALIDATION }}"
    dest: ./{{ compromised_VM_name }}.vmdk
    